import React, { useState, } from "react";
import { Table, Container, Form } from "react-bootstrap";
import "../../../../style/Admin/AdminServiceProvider.css";
import BgImage from "../../../../assets/images/header/Background.png";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faSearch } from "@fortawesome/free-solid-svg-icons";
import DatePicker from "react-datepicker";
import "react-datepicker/dist/react-datepicker.css";
import jsPDF from "jspdf";


const generatePDF = (rowData) => {
  const doc = new jsPDF();
  const title = "Service360 Invoice";


  doc.addImage(
    BgImage,
    "JPEG",
    0,
    0,
    doc.internal.pageSize.width,
    doc.internal.pageSize.height
  );

  // Table heading
  const headers = [
    "First Name",
    "Last Name",
    "Email",
    "Total Amount",
    "Payment Date",
    "Payment Method",
    "Card Number",
    "Reference ID",
    "Billing Address",
  ];
  if (rowData.selectedOption === "session") {
    headers.push("Title of the session");
  } else {
    headers.push("Subscription Type");
  }

  const data = [headers];

  // Add the row data
  const row = [
    rowData.firstName,
    rowData.lastName,
    rowData.email,
    rowData.totalAmount,
    rowData.date,
    rowData.paymentMethod,
    rowData.cardNumber,
    rowData.referenceId,
    rowData.billingAddress,
  ];
  if (rowData.selectedOption === "session") {
    row.push(rowData.Title);
  } else {
    row.push(rowData.subscriptionType);
  }
  data.push(row);

  // Set the title heading
  const Heading =
    "Service360 Invoice Report";
  doc.setFontSize(40);
  doc.text(Heading, doc.internal.pageSize.width / 2, 20, { align: "center" });

  const tableY = 50; // Adjust this value as needed

  const tableData = [];
  for (let i = 0; i < headers.length; i++) {
    const heading = headers[i];
    const detail = row[i];
    tableData.push([heading, detail]);
  }

  doc.autoTable({
    startY: tableY,
    body: tableData,
    theme: "grid",
    columnStyles: {
      0: {
        fillColor: "#282b3d",
        textColor: "#ffffff",
        fontStyle: "bold",
      },
    },
    styles: { halign: "left" },
  });

  // Set footer
  const footerText =
    "This invoice was generated by the system. For further inquiries, contact Service360@example.com.";
  const footerX = 10;
  const footerY = doc.internal.pageSize.height - 10;
  doc.setFontSize(10);
  doc.text(footerText, footerX, footerY);

  // Save the PDF
  doc.save(`${title}.pdf`);
};

const GenerateInvoice = () => {
  const sessionData = [
    {
      referenceId: "B123456789",
      Title: "Installing A/C",
      totalAmount: 1000,
      date: "01 Jun 2023",
      firstName: "John",
      lastName: "Doe",
      email: "john.doe@example.com",
      billingAddress: "123 Main St, City, Country",

      paymentMethod: "Credit Card",
      cardNumber: "**** **** **** 1234",
      expirationDate: "12/24",
      cvv: "***",
      selectedOption: "session",
    },

    {
      referenceId: "G987654321",
      Title: "Instaling Solar Panal",
      totalAmount: 1000,
      date: "2023-06-22 18:30:00",
      firstName: "Jane",
      lastName: "Smith",
      email: "jane.smith@example.com",
      billingAddress: "456 Elm St, City, Country",

      paymentMethod: "Credit Card",
      cardNumber: "**** **** **** 5678",
      selectedOption: "session",
    },
    {
      referenceId: "D345678912",
      Title: "Repairing Plumbing",
      totalAmount: 1000,
      date: "2023-06-22 18:30:00",
      firstName: "Michael",
      lastName: "Johnson",
      email: "michael.johnson@example.com",
      billingAddress: "789 Oak St, City, Country",
      paymentMethod: "Credit Card",
      cardNumber: "**** **** **** 9876",
      expirationDate: "06/23",

      selectedOption: "session",
    },
    {
      referenceId: "F654321987",
      Title: "Interior Painting",
      totalAmount: 1000,
      date: "2023-06-22 18:30:00",
      firstName: "Emily",
      lastName: "Williams",
      email: "emily.williams@example.com",
      billingAddress: "234 Pine St, City, Country",
      paymentMethod: "Credit Card",
      cardNumber: "**** **** **** 5432",

      selectedOption: "session",
    },
    {
      referenceId: "A876543210",
      Title: "Roof Inspection",
      totalAmount: 1000,
      date: "2023-06-22 18:30:00",
      firstName: "David",
      lastName: "Brown",
      email: "david.brown@example.com",
      billingAddress: "567 Maple St, City, Country",
      paymentMethod: "Credit Card",
      cardNumber: "**** **** **** 2109",

      selectedOption: "session",
    },
    {
      referenceId: "E765432109",
      Title: "Electrical Wiring",
      totalAmount: 1000,
      date: "2023-06-22 18:30:00",
      firstName: "Olivia",
      lastName: "Davis",
      email: "olivia.davis@example.com",
      billingAddress: "890 Elm St, City, Country",
      paymentMethod: "Credit Card",
      cardNumber: "**** **** **** 8765",
      selectedOption: "session",
    },
  ];

  const goldData = [
    {
      referenceId: "B123456789",
      subscriptionType: "Gold",
      totalAmount: 299,
      date: "2023-06-01 12:30:00",
      firstName: "John",
      lastName: "Doe",
      email: "john.doe@example.com",
      billingAddress: "123 Main St, City, Country",

      paymentMethod: "Credit Card",
      cardNumber: "**** **** **** 1234",
      selectedOption: "Ad",
    },
    {
      referenceId: "G987654321",
      subscriptionType: "Gold",
      totalAmount: 299,
      date: "2023-06-01 08:20:00",
      firstName: "Jane",
      lastName: "Smith",
      email: "jane.smith@example.com",
      billingAddress: "456 Elm St, City, Country",

      paymentMethod: "Credit Card",
      cardNumber: "**** **** **** 5678",
      selectedOption: "Ad",
    },
    {
      referenceId: "C234567890",
      subscriptionType: "Gold",
      totalAmount: 299,
      date: "2023-06-01 18:30:00",
      firstName: "Michael",
      lastName: "Johnson",
      email: "michael.johnson@example.com",
      billingAddress: "789 Oak St, City, Country",

      paymentMethod: "Credit Card",
      cardNumber: "**** **** **** 3456",
      selectedOption: "Ad",
    },
    {
      referenceId: "H765432109",
      subscriptionType: "Gold",
      totalAmount: 299,
      date: "2023-06-10 20:55:00",
      firstName: "Emily",
      lastName: "Williams",
      email: "emily.williams@example.com",
      billingAddress: "234 Pine St, City, Country",

      paymentMethod: "Credit Card",
      cardNumber: "**** **** **** 8765",
      selectedOption: "Ad",
    },
    {
      referenceId: "I123456789",
      subscriptionType: "Gold",
      totalAmount: 299,
      date: "2023-06-22 18:30:00",
      firstName: "David",
      lastName: "Brown",
      email: "david.brown@example.com",
      billingAddress: "567 Maple St, City, Country",

      paymentMethod: "Credit Card",
      cardNumber: "**** **** **** 9876",
      selectedOption: "Ad",
    },
    {
      referenceId: "J987654321",
      subscriptionType: "Gold",
      totalAmount: 299,
      date: "2023-06-27 22:12:00",
      firstName: "Olivia",
      lastName: "Davis",
      email: "olivia.davis@example.com",
      billingAddress: "890 Elm St, City, Country",

      paymentMethod: "Credit Card",
      cardNumber: "**** **** **** 5432",
      selectedOption: "Ad",
    },
  ];

  const platinumData = [
    // Platinum Subscriptions
    {
      referenceId: "P543216789",
      subscriptionType: "Platinum",
      totalAmount: 499,
      date: "2023-06-01 08:30:00",
      firstName: "Alex",
      lastName: "Johnson",
      email: "alex.johnson@example.com",
      billingAddress: "789 Oak St, City, Country",

      paymentMethod: "Credit Card",
      cardNumber: "**** **** **** 9876",
      selectedOption: "Ad",
    },
    {
      referenceId: "Q987654321",
      subscriptionType: "Platinum",
      totalAmount: 499,
      date: "2023-06-02 10:10:00",
      firstName: "Ella",
      lastName: "Williams",
      email: "ella.williams@example.com",
      billingAddress: "234 Pine St, City, Country",

      paymentMethod: "Credit Card",
      cardNumber: "**** **** **** 5432",
      selectedOption: "Ad",
    },
    {
      referenceId: "R123456789",
      subscriptionType: "Platinum",
      totalAmount: 499,
      date: "2023-06-08 14:15:00",
      firstName: "Jacob",
      lastName: "Smith",
      email: "jacob.smith@example.com",
      billingAddress: "456 Elm St, City, Country",

      paymentMethod: "Credit Card",
      cardNumber: "**** **** **** 5678",
      selectedOption: "Ad",
    },
    {
      referenceId: "S543216789",
      subscriptionType: "Platinum",
      totalAmount: 499,
      date: "2023-06-22 18:30:00",
      firstName: "Sophia",
      lastName: "Miller",
      email: "sophia.miller@example.com",
      billingAddress: "123 Main St, City, Country",

      paymentMethod: "Credit Card",
      cardNumber: "**** **** **** 1234",
      selectedOption: "Ad",
    },
    {
      referenceId: "T876543210",
      subscriptionType: "Platinum",
      totalAmount: 499,
      date: "2023-06-26 08:30:00",
      firstName: "William",
      lastName: "Brown",
      email: "william.brown@example.com",
      billingAddress: "567 Maple St, City, Country",

      paymentMethod: "Credit Card",
      cardNumber: "**** **** **** 2109",
      selectedOption: "Ad",
    },
    {
      referenceId: "U234567891",
      subscriptionType: "Platinum",
      totalAmount: 499,
      date: "2023-06-28 10:30:00",
      firstName: "Ava",
      lastName: "Davis",
      email: "ava.davis@example.com",
      billingAddress: "890 Elm St, City, Country",

      paymentMethod: "Credit Card",
      cardNumber: "**** **** **** 8765",
      selectedOption: "Ad",
    },
    {
      referenceId: "V765432109",
      subscriptionType: "Platinum",
      totalAmount: 499,
      date: "2023-06-30 18:30:00",
      firstName: "Liam",
      lastName: "Jones",
      email: "liam.jones@example.com",
      billingAddress: "678 Oak St, City, Country",

      paymentMethod: "Credit Card",
      cardNumber: "**** **** **** 2345",
      selectedOption: "Ad",
    },
  ];



  const [selectedOption, setSelectedOption] = useState('session');

  let dataToDisplay = [];

  if (selectedOption === 'session') {
    dataToDisplay = sessionData;
  } else if (selectedOption === 'gold') {
    dataToDisplay = goldData;
  } else if (selectedOption === 'platinum') {
    dataToDisplay = platinumData;
  }


  return (
    <section
      id="service-page"
      className="block serviceProvider py-3"
      style={{ backgroundImage: `url(${BgImage})` }}
    >
      <div className="input-group p-3">
        <Form.Group>
          <Form.Select
            className="form-control date-picker-input py-3"
            style={{ height: "3.4em" }}
            onChange={(e) => setSelectedOption(e.target.value)}
          >
            <option value="session">Training Session</option>
            <option value="gold">Gold Subscription</option>
            <option value="platinum">Platinum Subscription</option>
          </Form.Select>
        </Form.Group>
      </div>
      <div className="d-flex justify-content-center w-100">
        <div className="col-xs-3 col-md-4 col-lg-4 col-xl-4 col-xxl-3 m-3 me-0 date-picker-container">
          <div className="input-group m-0">
            <DatePicker
              className="form-control date-picker-input"
              placeholderText="From Date"
              dateFormat="yyyy-MM-dd"
              isClearable
            />
            <span className="input-group-text">
              <i className="bi bi-calendar2-week"></i>
            </span>
          </div>
        </div>
        <div className="me-xs-2 col-xs-2 col-md-4 col-lg-4 col-xl-4 col-xxl-3 m-3 date-picker-container">
          <div className="input-group">
            <DatePicker
              className="form-control date-picker-input"
              placeholderText="To Date"
              dateFormat="yyyy-MM-dd"
              isClearable
            />
            <span className="input-group-text">
              <i className="bi bi-calendar2-week"></i>
            </span>
          </div>
        </div>

        <div className="col-xs-2 col-sm-3 col-md-2 col-lg-3 col-xl-2 m-3 me-xs-5">
          <div className="input-group">
            <input type="text" className="form-control" placeholder="Search" />
            <span className="input-group-text">
              <FontAwesomeIcon icon={faSearch} />
            </span>
          </div>
        </div>
      </div>

      <div className="mt-4 d-flex flex-column w-100" style={{ width: "100%" }}>
        <Container className="table-responsive">
          <Table striped bordered hover size="lg" className="">
            <thead className="text-center">
              <tr className="p-3">
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Amount</th>
                <th>Payment Date</th>
                <th>Payment Method</th>
                <th>Card Number</th>
                <th>Reference ID</th>
                <th>Billing Address</th>
                {selectedOption === "session" && <th>Session Title</th>}
                {selectedOption === "gold" && <th>Subscription Type</th>}
                {selectedOption === "platinum" && <th>Subscription Type</th>}
                <th>Download</th>
              </tr>
            </thead>
            <tbody>
              {dataToDisplay.map((item, index) => (
                <tr key={index} className="p-3">
                  <td>{item.firstName}</td>
                  <td>{item.lastName}</td>
                  <td>{item.email}</td>
                  <td>{item.totalAmount}</td>
                  <td>{item.date}</td>
                  <td>{item.paymentMethod}</td>
                  <td>{item.cardNumber}</td>
                  <td>{item.referenceId}</td>
                  <td>{item.billingAddress}</td>
                  {selectedOption === "session" && <td>{item.Title}</td>}
                  {selectedOption === "gold" && (
                    <td>{item.subscriptionType}</td>
                  )}
                  {selectedOption === "platinum" && (
                    <td>{item.subscriptionType}</td>
                  )}
                  <td className="text-center">
                    <i
                      className="fa-solid fa-download fa-lg"
                      onClick={() => generatePDF(item)}
                      style={{ cursor: "pointer" }}
                    ></i>
                  </td>
                </tr>
              ))}
            </tbody>
          </Table>
        </Container>
      </div>
    </section>
  );
};

export default GenerateInvoice;